---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-no-majority-of-nodes-ready
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: NoMajorityOfNodesReady
      expr: |
        kube_statefulset_status_replicas_ready * on (namespace, statefulset) group_left(label_app_kubernetes_io_name) kube_statefulset_labels{label_app_kubernetes_io_component="rabbitmq"}
        <=
        kube_statefulset_replicas              * on (namespace, statefulset) group_left(label_app_kubernetes_io_name) kube_statefulset_labels{label_app_kubernetes_io_component="rabbitmq"}
        / 2
        unless
        kube_statefulset_replicas              * on (namespace, statefulset) group_left(label_app_kubernetes_io_name) kube_statefulset_labels{label_app_kubernetes_io_component="rabbitmq"}
        == 0
      for: 5m
      annotations:
        description: |
          Only `{{ $value }}` replicas are ready in StatefulSet `{{ $labels.statefulset }}`
          of RabbitMQ cluster `{{ $labels.label_app_kubernetes_io_name }}` in namespace `{{ $labels.namespace }}`.
        summary: |
          No majority of nodes have been ready for the last 5 minutes.
          Check the details of the pods:
          `kubectl -n {{ $labels.namespace }} describe pods -l app.kubernetes.io/component=rabbitmq,app.kubernetes.io/name={{ $labels.label_app_kubernetes_io_name }}`
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: warning
